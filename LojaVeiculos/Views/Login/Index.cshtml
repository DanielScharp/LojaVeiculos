
@{
    Layout = null;
}

@RenderPage("../Shared/_Header.cshtml")

<style>

    body{
        background: url('/Content/Imagens/bg-1.jpg');
        background-size: cover;
    }

</style>

<body style="background-color: teal;">

    <div class="row">

        <div class="col-sm-3 m-auto text-center" style="padding: 50px 0px 50px 0px;">
            <h3 style="color: #107379;">SGV</h3>
            <h5 style="color: #808080;">Sistema de gerenciamento de veículos</h5>
        </div>

    </div>

    <div class="row">

        <div class="col-sm-3 m-auto">

            <div class="card">
                <div class="card-header">
                    <i class="fas fa-user"></i> Efetuar Login
                </div>

                <!-- Formulário de Login -->
                <div class="card-body">
                    <form class="needs-validation" novalidate method="post" action="">

                        @Html.AntiForgeryToken()

                        @if (ViewBag.Mensagem != null)
                        {
                            <div class="alert alert-warning">
                                @ViewBag.Mensagem
                            </div>
                        }

                        <label>Login</label>
                        <input type="text" class="form-control" name="Login" id="Login" value="" />

                        <label>Senha</label>
                        <input type="password" class="form-control" name="Password" id="Password" value="" />
                        </br>

                        <button type="submit" class="btn btn-dark w-100" id="btnEnviar">Entrar</button>

                    </form>
                </div>


            </div>
        </div>


    </div>

</body>






<script src="~/Content/js/crypto-js.js"></script>
<script>

    (function () {
        'use strict';

        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');

            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {

                form.addEventListener('submit', function (event) {

                    var validado = "X"; //$("#g-recaptcha-response").val();

                    if (form.checkValidity() === false || validado == "") {

                        event.preventDefault();
                        event.stopPropagation();

                        alert("Necessário validar o formulário antes de enviar.")

                    } else { //Formulário válido

                        //Criptografa a senha
                        $("#Password").val(CryptoJS.MD5($("#Password").val()));

                        $("#btnEnviar").html("<i class='fas fa-sync-alt'></i> Aguarde...");
                        $("#btnEnviar").attr("disabled", "disabled");
                    }

                    form.classList.add('was-validated');

                }, false);

            });
            return false;
        }, false);
    })();

</script>

